{
  "info": {
    "_postman_id": "6471c43b-fb9d-45bf-bf37-9c4f0e69f0dc",
    "name": "TestJavaCode",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "253693"
  },
  "item": [
    {
      "name": "CreateFailNoMoney",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Response status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "",
              "",
              "pm.test(\"Response has the required fields - id and count\", function () {",
              "    const responseData = pm.response.json();",
              "    ",
              "    pm.expect(responseData).to.be.an('object');",
              "    pm.expect(responseData).to.have.property('id');",
              "    pm.expect(responseData).to.have.property('count');",
              "});",
              "",
              "",
              "pm.test(\"Id is a non-empty string\", function () {",
              "  const responseData = pm.response.json();",
              "  ",
              "  pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should not be empty\");",
              "});",
              "",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"walletId\" : \"33fa31a5-87d6-4906-b252-4e8e43df0064\",\n    \"operationType\" : \"DEPOSIT\",\n    \"amount\" : 1000\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{server}}/api/v1/wallet",
          "host": [
            "{{server}}"
          ],
          "path": [
            "api",
            "v1",
            "wallet"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Create OK",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Response status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "",
              "pm.test(\"Response has the required fields - status, reason, message, and timestamp\", function () {",
              "    const responseData = pm.response.json();",
              "    ",
              "    pm.expect(responseData).to.be.an('object');",
              "    pm.expect(responseData).to.have.property('status');",
              "    pm.expect(responseData).to.have.property('reason');",
              "    pm.expect(responseData).to.have.property('message');",
              "    pm.expect(responseData).to.have.property('timestamp');",
              "});",
              "",
              "",
              "pm.test(\"Status is a non-empty string\", function () {",
              "    const responseData = pm.response.json();",
              "    ",
              "    pm.expect(responseData).to.be.an('object');",
              "    pm.expect(responseData.status).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Status should not be empty\");",
              "});",
              "",
              "",
              "pm.test(\"Reason is a non-empty string\", function () {",
              "    const responseData = pm.response.json();",
              "    ",
              "    pm.expect(responseData).to.be.an('object');",
              "    pm.expect(responseData.reason).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Reason should be a non-empty string\");",
              "});",
              "",
              "",
              "pm.test(\"Message is a non-empty string\", function () {",
              "    const responseData = pm.response.json();",
              "    ",
              "    pm.expect(responseData).to.be.an('object');",
              "    pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"walletId\" : \"33fa31a5-87d6-4906-b252-4e8e43df0064\",\n    \"operationType\" : \"WITHDRAW\",\n    \"amount\" : 1000\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{server}}/api/v1/wallet",
          "host": [
            "{{server}}"
          ],
          "path": [
            "api",
            "v1",
            "wallet"
          ]
        }
      },
      "response": []
    },
    {
      "name": "CreateFailNoWalletId",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Response status code is 500\", function () {",
              "  pm.expect(pm.response.to.have.status(500));",
              "});",
              "",
              "",
              "pm.test(\"Response has the required fields\", function () {",
              "    const responseData = pm.response.json();",
              "    ",
              "    pm.expect(responseData).to.be.an('object');",
              "    pm.expect(responseData.timestamp).to.exist;",
              "    pm.expect(responseData.status).to.exist;",
              "    pm.expect(responseData.error).to.exist;",
              "    pm.expect(responseData.path).to.exist;",
              "});",
              "",
              "",
              "",
              "pm.test(\"Content-Type header is application/json\", function () {",
              "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
              "});",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"operationType\" : \"DEPOSIT\",\n    \"amount\" : 1000\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{server}}/api/v1/wallet",
          "host": [
            "{{server}}"
          ],
          "path": [
            "api",
            "v1",
            "wallet"
          ]
        }
      },
      "response": []
    },
    {
      "name": "CreateFailOperationType",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Response status code is 400\", function () {",
              "    pm.expect(pm.response.code).to.equal(400);",
              "});",
              "",
              "",
              "pm.test(\"Content-Type header is application/json\", function () {",
              "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
              "});",
              "",
              "",
              "pm.test(\"Response has required fields\", function () {",
              "    const responseData = pm.response.json();",
              "",
              "    pm.expect(responseData).to.be.an('object');",
              "    pm.expect(responseData.timestamp).to.exist;",
              "    pm.expect(responseData.status).to.exist;",
              "    pm.expect(responseData.error).to.exist;",
              "    pm.expect(responseData.path).to.exist;",
              "});",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"operationType\" : \"NoDiposite\",\n    \"amount\" : 1000\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{server}}/api/v1/wallet",
          "host": [
            "{{server}}"
          ],
          "path": [
            "api",
            "v1",
            "wallet"
          ]
        }
      },
      "response": []
    },
    {
      "name": "CreateFailZeroAmount",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Response status code is 500\", function () {",
              "    pm.expect(pm.response.code).to.equal(500);",
              "});",
              "",
              "",
              "pm.test(\"Response has the required fields - timestamp, status, error, and path\", function () {",
              "    const responseData = pm.response.json();",
              "",
              "    pm.expect(responseData).to.be.an('object');",
              "    pm.expect(responseData.timestamp).to.exist;",
              "    pm.expect(responseData.status).to.exist;",
              "    pm.expect(responseData.error).to.exist;",
              "    pm.expect(responseData.path).to.exist;",
              "});",
              "",
              "",
              "",
              "pm.test(\"Content-Type is application/json\", function () {",
              "    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
              "});",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\n    \"walletId\" : \"33fa31a5-87d6-4906-b252-4e8e43df0064\",\n    \"operationType\" : \"DEPOSIT\",\n    \"amount\" : 0\n}",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        },
        "url": {
          "raw": "{{server}}/api/v1/wallet",
          "host": [
            "{{server}}"
          ],
          "path": [
            "api",
            "v1",
            "wallet"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Get",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Response status code is 200\", function () {",
              "    pm.expect(pm.response.code).to.equal(200);",
              "});",
              "",
              "",
              "",
              "pm.test(\"Response has the required fields - id and count\", function () {",
              "    const responseData = pm.response.json();",
              "    ",
              "    pm.expect(responseData).to.be.an('object');",
              "    pm.expect(responseData).to.have.property('id');",
              "    pm.expect(responseData).to.have.property('count');",
              "});",
              "",
              "",
              "pm.test(\"Id is a non-empty string\", function () {",
              "  const responseData = pm.response.json();",
              "  ",
              "  pm.expect(responseData.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Id should be a non-empty string\");",
              "});",
              "",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{server}}/api/v1/wallets/33fa31a5-87d6-4906-b252-4e8e43df0064",
          "host": [
            "{{server}}"
          ],
          "path": [
            "api",
            "v1",
            "wallets",
            "33fa31a5-87d6-4906-b252-4e8e43df0064"
          ]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "server",
      "value": "localhost:8080",
      "type": "string"
    }
  ]
}